package net.process.locator1.erp;

import java.util.ArrayList;
import java.util.List;

import net.process.locator1.R;
import net.process.locator1.erp.OrderSearchAdapter.ViewHolder;



import android.app.Activity;
import android.content.Context;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnFocusChangeListener;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Filter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;


public class OrderListAdapter extends ArrayAdapter<Products> {

	public static ArrayList<Products> original;
	private ArrayList<Products> fitems;
	private Filter filter;
	private Activity mcontext;
	private LayoutInflater inflater;
	public static int k=-1;

	public OrderListAdapter(Activity context, int textViewResourceId,
			ArrayList<Products> objects) {
		super(context, textViewResourceId, objects);
		// TODO Auto-generated constructor stub
		this.original = new ArrayList<Products>(objects);
        this.fitems = new ArrayList<Products>(objects);
        this.mcontext=context;
	}
	
	@Override
	public View getView(final int position, View convertView, ViewGroup parent) 
	{	        
		final ViewHolder holder;

		if(convertView==null)
		{
			
			holder = new ViewHolder();	
		inflater = mcontext.getLayoutInflater();
		convertView = inflater.inflate(R.layout.frmorder_listitem, parent,false);
		
		  holder.txtName  = (TextView) convertView
				.findViewById(R.id.txt_nameproduct);
		  holder.editNumber  = (EditText) convertView
				.findViewById(R.id.edit_product);
		  holder.ckcBox = (CheckBox) convertView
				.findViewById(R.id.ckc_prdouct);
		  holder.txtID =(TextView)convertView.findViewById(R.id.txt_productid);
		  		  
		  convertView.setTag(holder);
		
		}
		
		else
		{
			
			holder=(ViewHolder)convertView.getTag();
		}
			
			if (fitems == null) {
				fitems = new ArrayList<Products>(original);
			}
		
		// Log.d("Size",fitems.size()+"");
		// ham` getItem da duoc override lai
		final Products prudcts = fitems.get(position);// getItem(position);
		holder.txtName.setText(prudcts.ProductName);
		holder.editNumber.setText(prudcts.ProductNumber);
		holder.txtID.setText(prudcts.ID);
		holder.ckcBox.setSelected(false);

		holder.editNumber.setOnFocusChangeListener(new OnFocusChangeListener() {
			
			@Override
			public void onFocusChange(View v, boolean hasFocus) {
				// TODO Auto-generated method stub
				if(!hasFocus){
					//final int position = v.getId();
					final EditText Caption = (EditText) v;
					//EditText editSearch=(EditText)mcontext.findViewById(R.id.searchOder);
					
					{
						int postionOrder=LoadDataGrid(holder.txtID.getText().toString());
						if(postionOrder>-1){
							original.get(postionOrder).ProductNumber=Caption.getText().toString();
							
						}
					}
					}
				}
		});
			
			
		holder.ckcBox.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				//Toast.makeText(mcontext,editNumber.getText(),Toast.LENGTH_LONG).show();
			  	//fitems.remove(position);
				try{
					holder.ckcBox.setChecked(false);
					Products productAdd=original.get(position);
				  	OrderSearchAdapter.original.add(productAdd);
				  	FrmOrder.arrListStore.add(productAdd);
				     original.remove(position);
				      getFilter().filter("");
				    k=position;
				   // Toast.makeText(getContext(), position+"lick",Toast.LENGTH_SHORT).show();
				}
				catch(Exception e){
					//Toast.makeText(mcontext,e.toString()+"list adapter",Toast.LENGTH_LONG).show();
				}
				
			}
		});
		
		return convertView;
	}
	public ArrayList<Products> LoadDataGrid(int index)
	{
		//load tat ca  cac thang tren gridview ma chua thay doi tren datasource
		ArrayList<Products> arrproducts = new ArrayList<Products>();
		ListView grdView=(ListView)mcontext.findViewById(R.id.gridProductList);
		for(int i=0;i<grdView.getChildCount();i++){
			View items=grdView.getChildAt(i);
			EditText editNumber=(EditText)items.findViewById(R.id.edit_product);
			TextView txtView=(TextView)items.findViewById(R.id.txt_nameproduct);
			Products products= new Products();
			products.ProductNumber=editNumber.getText().toString();
			products.ProductName=txtView.getText().toString();
			products.ProductActive=true;
			arrproducts.add(products);
			
			
			//str=str+editNumber.getText().toString();
			//strName=strName+txtView.getText().toString();
			//original.set(i, products);
			
		}
		//xoa thang da xoa roi
		if(index>-1){arrproducts.remove(index);}
		
		return arrproducts;
		
	}
	public int LoadDataGrid(String Id)
	{
		
		for(int i=0;i<original.size();i++){
			 if(original.get(i).ID==Id){
				return i;
			 }
		 }
		return -1;
		
	}
	@Override
	public Filter getFilter()
	{
	    if (filter == null)
	        filter = new PkmnNameFilter();

	    return filter;
	}
	private class PkmnNameFilter extends Filter{

		
		@Override
		protected FilterResults performFiltering(CharSequence constraint) {
			// TODO Auto-generated method stub
			FilterResults filterResult = new FilterResults();
			String prefix=constraint.toString().toLowerCase();
			if(prefix==null||prefix.length()==0){
				ArrayList<Products> list = new ArrayList<Products>(original);
				filterResult.values=list;
				filterResult.count=list.size();
			}
			else
			{
				final ArrayList<Products> list = new ArrayList<Products>(original);
				final ArrayList<Products> nlist = new ArrayList<Products>();
				int count=list.size();
				for(int i=0;i<count;i++){
					final Products products=list.get(i);
					final String value=products.ProductName.toLowerCase();
					if(value.contains(prefix)){
						nlist.add(products);
					}
				}
				filterResult.values=nlist;
				filterResult.count=nlist.size();
				
				 Log.d("Size result1",nlist.size()+"");
			}
			return filterResult;
		}

		@Override
		protected void publishResults(CharSequence constraint,
				FilterResults results) {
			fitems=(ArrayList<Products>)results.values;
			clear();
            int count = fitems.size();
            for (int i=0; i<count; i++)
            {
            	Products pkmn = (Products)fitems.get(i);
                add(pkmn);
                //notifyDataSetInvalidated();
            }
			// TODO Auto-generated method stub
            Log.d("Size result",count+"");
			
		}
		
	}
	static class ViewHolder{
		 EditText editNumber;
		 TextView txtName;
		 TextView txtID;
		 CheckBox ckcBox;
	 }

}
